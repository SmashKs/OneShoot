/*
 * Copyright (C) 2018 The Smash Ks Open Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import dependenices.Deps.Global
import dependenices.Deps.GlobalTest
import dependenices.Deps.Presentation
import dependenices.Deps.PresentationTest
import dependenices.Versions.Android
import resources.Metal

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Android.compileSdk
    buildToolsVersion Android.buildTools
    defaultConfig {
        applicationId "smash.ks.com.oneshoot"
        minSdkVersion Android.minSdk
        targetSdkVersion Android.targetSdk
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        renderscriptSupportModeEnabled true    // Enable RS support
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions { javaMaxHeapSize "4g" }
    packagingOptions { exclude 'META-INF/rxjava.properties' }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    sourceSets {
        main {
            res.srcDirs += Metal.dirs
        }
    }
}

androidExtensions { experimental = true }

kotlin {
    experimental {
        coroutines "enable"
    }
}

kapt {
    correctErrorTypes = true
    useBuildCache = true
    mapDiagnosticLocations = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':domain')
    implementation project(':data')
    implementation project(':ext')

    implementation Global.kotlin
    implementation Global.coroutine
    implementation Global.coroutinesRx2
    implementation Global.refelect
    implementation Presentation.coroutine

    implementation Global.rxJava2
    implementation Global.rxKotlin

    implementation Global.shaver
    implementation Presentation.knifer

    implementation Presentation.anko
    implementation Presentation.ankoSdk25
    implementation Presentation.ankoV7
    implementation Presentation.ankoCoroutine
    implementation Presentation.ankoV7Coroutine
    implementation Presentation.ktx

    implementation Presentation.lifecycle

    implementation Presentation.firebaseCore
    implementation Presentation.firebaseDB
    implementation Presentation.firebaseAuth

    implementation Presentation.modelMapper

    implementation Global.kodeinAndroid
    implementation Global.kodenJVM

    implementation(Presentation.rxBus, {
        exclude group: 'com.jakewharton.timber', module: 'timber'
    })
    implementation Presentation.rxLifecycleComponent
    implementation Presentation.rxLifecycle
    implementation Presentation.rxPermission

    implementation Presentation.retrofit2
    implementation Presentation.retrofit2Gson
    implementation Presentation.retrofit2RxJava2
    implementation Presentation.okhttpLogging

    implementation Presentation.glide

    implementation Presentation.quickDialog

    implementation Presentation.appcompat
    implementation Presentation.recyclerview
    implementation Presentation.annot
    implementation Presentation.constraintLayout

    implementation Presentation.arv

    testImplementation GlobalTest.junit
    testImplementation GlobalTest.kotlin
    testImplementation GlobalTest.mockito
    testImplementation GlobalTest.assertj

    androidTestImplementation PresentationTest.robolectric
    androidTestImplementation PresentationTest.mockito
    androidTestImplementation(PresentationTest.runner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(PresentationTest.rules) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(PresentationTest.espressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(PresentationTest.espressoIntent) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(PresentationTest.espressoContrib) {
        exclude module: 'appcompat'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    }
}

//apply plugin: 'com.google.gms.google-services'