/*
 * Copyright (C) 2018 The Smash Ks Open Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]
    defaultConfig {
        applicationId "smash.ks.com.oneshoot"
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        renderscriptSupportModeEnabled true    // Enable RS support
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions { javaMaxHeapSize "4g" }
    packagingOptions { exclude 'META-INF/rxjava.properties' }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    sourceSets {
        main {
            res.srcDirs += [
                    'src/main/res-features/ks',
            ]
        }
    }
}

androidExtensions { experimental = true }

kotlin {
    experimental {
        coroutines "enable"
    }
}

kapt {
    correctErrorTypes = true
    useBuildCache = true
    mapDiagnosticLocations = true
}

dependencies {
    def pd = rootProject.ext.presentationDependencies
    def ptd = rootProject.ext.presentationTestDependencies
    def gd = rootProject.ext.globalDependencies
    def gtd = rootProject.ext.globalTestDependencies

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':domain')
    implementation project(':data')
    implementation project(':ext')

    implementation gd.kotlin
    implementation gd.kotlinCoroutine
    implementation gd.kotlinCoroutineRx2
    implementation gd.kotlinReflect
    implementation pd.kotlinCoroutineAndroid

    implementation gd.rxJava2
    implementation gd.rxKotlin2

    implementation gd.kshaver
    implementation pd.kknifer

    implementation pd.ankoCommon
    implementation pd.ankoSdk25
    implementation pd.ankoAppcompat
    implementation pd.ankoCoroutineSdk25
    implementation pd.ankoCoroutineAppcompat
    implementation pd.androidKtx

    implementation pd.aacViewAndLifecycle

    implementation pd.firebaseCore
    implementation pd.firebaseDatabase
    implementation pd.firebaseAuth

    implementation pd.mapper

    implementation gd.kodeinGeneric
    implementation gd.kodeinAndroid

    implementation(pd.rxbus, {
        exclude group: 'com.jakewharton.timber', module: 'timber'
    })
    implementation pd.rxlifecycle2Component
    implementation pd.rxlifecycle2
    implementation pd.rxbinding2
    implementation pd.rxbinding2Appcompat
    implementation pd.rxbinding2Design
    implementation pd.rxbinding2RecyclerView
    implementation pd.rxpermission2

    implementation pd.retrofit2
    implementation pd.retrofit2ConverterGson
    implementation pd.retrofit2AdapterRxJava2
    implementation pd.okhttp3InterceptorLog

    implementation pd.androidCompat
    implementation pd.androidAnnot
    implementation pd.androidConstraintLayout

    implementation pd.adaptiveRecycler

    testImplementation gtd.junit
    testImplementation gtd.kotlinJunit
    testImplementation gtd.mockito
    testImplementation gtd.assertj

    androidTestImplementation ptd.robolectric
    androidTestImplementation ptd.supportRunner
    androidTestImplementation ptd.supportRules
    androidTestImplementation ptd.mockitoAndroid
    androidTestImplementation(ptd.androidRunner) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(ptd.androidRules) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(ptd.espressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(ptd.espressoIntents) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation(ptd.espressoContrib) {
        exclude module: 'appcompat'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    }
}

//apply plugin: 'com.google.gms.google-services'